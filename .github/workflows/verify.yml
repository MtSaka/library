name: library-verification
run-name: ${{ github.workflow }} (${{ github.ref_name }})

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      YUKICODER_TOKEN:
      GH_PAT:
        required: true

concurrency:
  group: verify-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-run:
    runs-on: ${{ vars.RUNNER_IMAGE }}

    outputs:
      node_ids: ${{ steps.preapre.outputs.node_ids }}

    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        sparse-checkout: verify

    - name: Prepare
      id: preapre
      run: |
        PARALLEL=$(nproc)

        TARGETS=$(find verify -type f -name '*.test.cpp' | wc -l)
        NODES=$(((TARGETS + PARALLEL - 1) / PARALLEL))

        if [ $NODES -lt 20 ]; then
          NODES=20
        fi

        echo "Nodes: ${NODES}"

        IDS='['
        for ((i=0; i < NODES; i++)); do
            IDS+=$(printf '"%02d"' "${i}")
            if [ $i -lt $((NODES-1)) ]; then
                IDS+=','
            fi
        done
        IDS+=']'

        echo ${IDS}
        echo "node_ids=$(echo "${IDS}" | jq -c)" >> ${GITHUB_OUTPUT}


  run:
    runs-on: ${{ vars.RUNNER_IMAGE }}
    needs: pre-run

    strategy:
      fail-fast: false
      matrix:
        id: ${{ fromJSON(needs.pre-run.outputs.node_ids) }}

    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        path: main
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12.0

    - name: Install oj-verify
      run: pip3 install -U online-judge-verify-helper

    - name: Clone AC-Library
      uses: actions/checkout@v3
      with:
        repository: atcoder/ac-library
        path: ac-library
        sparse-checkout: atcoder

    - name: Assign test files
      working-directory: main
      env:
        CPLUS_INCLUDE_PATH: ${{ github.workspace }}/ac-library
      run: |
        TEST_FILES=$(
          find verify -type f -name '*.test.cpp' | \
          sort | \
          awk -v n=${{ strategy.job-total }} \
              -v i=${{ strategy.job-index }} \
              '{
                if((NR - 1) % n == i) {
                  print $0
                }
              }' \
          )

        echo ${TEST_FILES} > .verify-helper/targets.txt
        cat .verify-helper/targets.txt

    - name: Cache judge data
      if: ${{ !cancelled() && github.ref_name == github.event.repository.default_branch }}
      id: cache-judge
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/online-judge-tools/library-checker-problems/
          main/.verify-helper/cache/
        key: verify-${{ hashFiles('main/verify/**/*.test.cpp', 'main/.verify-helper/targets.txt') }}

    - name: Run tests
      working-directory: main
      env:
        CACHE_HIT: ${{ steps.cache-judge.outputs.cache-hit }}
        CPLUS_INCLUDE_PATH: ${{ github.workspace }}/ac-library
        YUKICODER_TOKEN: ${{ secrets.YUKICODER_TOKEN }}
      run: |
        set -eu

        echo '{}' > ./.verify-helper/timestamps.json

        if [ ! -f ./.verify-helper/timestamps.remote.json ] || [ "${CACHE_HIT}" != 'true' ]; then
          echo '{}' > ./.verify-helper/timestamps.remote.json
        fi

        oj d https://judge.yosupo.jp/problem/aplusb &> /dev/null

        PARALLEL=$(nproc)
        echo "Parallel execution: ${PARALLEL}"

        head -c -1 ./.verify-helper/targets.txt | \
        xargs -P ${PARALLEL} -d ' ' -I {} bash ./.github/workflows/run-test.sh {}

        jq --slurp --sort-keys 'reduce .[] as $item ({}; . * $item)' \
        ./.verify-helper/timestamps.json > "./.verify-helper/timestamps-${{ matrix.id }}.json"
        cat "./.verify-helper/timestamps-${{ matrix.id }}.json"

    - name: Save timestamps
      uses: actions/upload-artifact@v3
      if: ${{ !cancelled() }}
      with:
        name: timestamps
        path: main/.verify-helper/timestamps-${{ matrix.id }}.json

  post-run:
    runs-on: ${{ vars.RUNNER_IMAGE }}
    needs: run
    if: ${{ !cancelled() && github.ref_name == github.event.repository.default_branch }}

    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        sparse-checkout: .verify-helper

    - name: Load timestamps
      uses: actions/download-artifact@v3
      with:
        name: timestamps
        path: .verify-helper/timestamps

    - name: Merge timestamps
      working-directory: .verify-helper
      run: |
        touch ./timestamps.remote.json

        jq --slurp --sort-keys 'reduce .[] as $item ({}; . * $item)' \
        ./timestamps.remote.json timestamps/* > ./merged-timestamps.json

        cp -f ./merged-timestamps.json ./timestamps.remote.json
        cat ./timestamps.remote.json

    - name: Push merged timestamps
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git remote set-url origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}

        git config --global user.name "GitHub"
        git config --global user.email "noreply@github.com"
        git add .verify-helper/timestamps.remote.json

        if (git diff --cached --shortstat | grep '[0-9]'); then
          git commit -m "[auto-verifier] verify commit ${GITHUB_SHA}"
          git push origin HEAD:${GITHUB_REF}
        else
          echo "No updated timestamps."
        fi